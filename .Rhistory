CRTaggregated <- aggregateCRT(CRT, auxiliaries = c('Total_femelle', 'base_denom'))
summary(CRTaggregated)
summary(CRTaggregated$trial$base_denom)
# check for assignment of the same location to multiple clusters
CRT$trial$cluster0 <- CRT$trial$cluster
CRT$trial$cluster <- NULL
loc_matched <- CRTaggregated$trial %>% left_join(CRT$trial, by = join_by(y, x))
outliers <- with(loc_matched, loc_matched[cluster0 != cluster, ])
# check for outlying locations
library(dplyr)
clusters <- CRT$trial %>%
dplyr::group_by(cluster0) %>%
dplyr::summarize(mlat = mean(y), mlong = mean(x))
loc_matched <- loc_matched %>% left_join(clusters)
loc_matched$distance <- with(loc_matched, sqrt((mlat - y)^2 + (mlong - x)^2))
summary(loc_matched$distance)
outliers <- loc_matched [loc_matched$distance > 0.2,]
outliers$Row.y
hist(outliers$distance)
# check for nearest pixel in the assigned raster
anono_pixels = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/Anono_BGS_samp_pixels_baseline.csv')
gbagba_pixels = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/Gbagba_BGS_samp_pixels_baseline.csv')
anono_pixels$Site_étude <- 'Anono'
gbagba_pixels$Site_étude <- 'Gbagba'
pixels <- rbind(anono_pixels, gbagba_pixels)
pixels$cluster <- with(pixels, factor(ifelse(Site_étude == 'Anono', Cluster + 100, Cluster + 200)))
pixelCRT <- latlong_as_xy(trial = pixels, latvar ='Y', longvar = 'X')
all_locations <- cbind(c(loc_matched$x, pixelCRT$trial$x) , c(loc_matched$y, pixelCRT$trial$y))
all_distances <- as.matrix(dist(all_locations, method = "euclidean"))
pixel_distances <- all_distances[seq(1:nrow(loc_matched)), seq(nrow(loc_matched),nrow(all_distances))]
loc_matched$nearest_cluster <- NA
for(i in seq(1:nrow(loc_matched))){
loc_matched$nearest_cluster[i] <- pixels$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))][1]
}
remove(location_matched)
table(loc_matched$nearest_cluster)
table(factor(loc_matched$nearest_cluster))
? Check for updates
# read in cleaned baseline data
df = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/SNIS_BGS_Pelagie_Aboa.csv')
# remove uninformative records
df <- df[df$lat > 0 & df$Commentaires == 'Fonctionnel', ]
# plot map of assigned clusters
library(CRTspat)
df$cluster <- factor(df$Code)
df <- with(df, df[Espèces %in% c('Aedes aegypti', 'Néant'), c('Row', 'Site_étude', 'cluster', 'lat', 'long', 'Total_femelle')])
Gbagba <- latlong_as_xy(data.frame(df[df$Site_étude == 'Gbagba',]))
plotCRT(Gbagba, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Gbagba)
Anono <- latlong_as_xy(data.frame(df[df$Site_étude == 'Anono',]))
plotCRT(Anono, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Anono)
# aggregate records for repeated samples of the same locations
CRT <- latlong_as_xy(data.frame(df))
CRT$trial$base_denom <- 1
CRTaggregated <- aggregateCRT(CRT, auxiliaries = c('Total_femelle', 'base_denom'))
summary(CRTaggregated)
summary(CRTaggregated$trial$base_denom)
# check for assignment of the same location to multiple clusters
CRT$trial$cluster0 <- CRT$trial$cluster
CRT$trial$cluster <- NULL
loc_matched <- CRTaggregated$trial %>% left_join(CRT$trial, by = join_by(y, x))
# read in cleaned baseline data
df = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/SNIS_BGS_Pelagie_Aboa.csv')
# remove uninformative records
df <- df[df$lat > 0 & df$Commentaires == 'Fonctionnel', ]
# plot map of assigned clusters
library(CRTspat)
df$cluster <- factor(df$Code)
df <- with(df, df[Espèces %in% c('Aedes aegypti', 'Néant'), c('Row', 'Site_étude', 'cluster', 'lat', 'long', 'Total_femelle')])
Gbagba <- latlong_as_xy(data.frame(df[df$Site_étude == 'Gbagba',]))
plotCRT(Gbagba, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Gbagba)
Anono <- latlong_as_xy(data.frame(df[df$Site_étude == 'Anono',]))
plotCRT(Anono, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Anono)
# aggregate records for repeated samples of the same locations
CRT <- latlong_as_xy(data.frame(df))
CRT$trial$base_denom <- 1
CRTaggregated <- aggregateCRT(CRT, auxiliaries = c('Total_femelle', 'base_denom'))
summary(CRTaggregated)
summary(CRTaggregated$trial$base_denom)
# check for assignment of the same location to multiple clusters
library(dplyr)
CRT$trial$cluster0 <- CRT$trial$cluster
CRT$trial$cluster <- NULL
loc_matched <- CRTaggregated$trial %>% left_join(CRT$trial, by = join_by(y, x))
outliers <- with(loc_matched, loc_matched[cluster0 != cluster, ])
# check for outlying locations
clusters <- CRT$trial %>%
dplyr::group_by(cluster0) %>%
dplyr::summarize(mlat = mean(y), mlong = mean(x))
loc_matched <- loc_matched %>% left_join(clusters)
loc_matched$distance <- with(loc_matched, sqrt((mlat - y)^2 + (mlong - x)^2))
summary(loc_matched$distance)
outliers <- loc_matched [loc_matched$distance > 0.2,]
outliers$Row.y
hist(outliers$distance)
# check for nearest pixel in the assigned raster
anono_pixels = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/Anono_BGS_samp_pixels_baseline.csv')
gbagba_pixels = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/Gbagba_BGS_samp_pixels_baseline.csv')
anono_pixels$Site_étude <- 'Anono'
gbagba_pixels$Site_étude <- 'Gbagba'
pixels <- rbind(anono_pixels, gbagba_pixels)
pixels$cluster <- with(pixels, factor(ifelse(Site_étude == 'Anono', Cluster + 100, Cluster + 200)))
pixelCRT <- latlong_as_xy(trial = pixels, latvar ='Y', longvar = 'X')
all_locations <- cbind(c(loc_matched$x, pixelCRT$trial$x) , c(loc_matched$y, pixelCRT$trial$y))
all_distances <- as.matrix(dist(all_locations, method = "euclidean"))
pixel_distances <- all_distances[seq(1:nrow(loc_matched)), seq(nrow(loc_matched),nrow(all_distances))]
loc_matched$nearest_cluster <- NA
for(i in seq(1:nrow(loc_matched))){
loc_matched$nearest_cluster[i] <- pixels$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))][1]
}
View(loc_matched)
loc_matched$nearest_cluster <- NA
for(i in seq(1:nrow(loc_matched))){
loc_matched$nearest_cluster[i] <- pixelCRT$trial$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))][1]
}
table(loc_matched$nearest_cluster)
table(pixelCRT$trial$cluster)
for(i in seq(1:nrow(loc_matched))){
loc_matched$nearest_cluster[i] <- pixelCRT$trial$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))[1]]
}
table(pixelCRT$trial$cluster)
table(loc_matched$nearest_cluster)
nrow(pixel_distances)
ncol(pixel_distances)
12*40
head(pixel_distances)
pixel_distances <- all_distances[seq(1:nrow(loc_matched)), seq(nrow(loc_matched)+1,nrow(all_distances))]
loc_matched$nearest_cluster <- NA
for(i in seq(1:nrow(loc_matched))){
loc_matched$nearest_cluster[i] <- pixelCRT$trial$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))[1]]
}
table(loc_matched$nearest_cluster)
ncol(pixel_distances)
loc_matched$nearest_cluster <- NULL
for(i in seq(1:nrow(loc_matched))){
loc_matched$nearest_cluster[i] <- pixelCRT$trial$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))[1]]
}
table(loc_matched$nearest_cluster)
table(pixelCRT$trial$cluster)
pixelCRT$trial$cluster[which(pixel_distances[5,] == min(pixel_distances[5,]))[1]]
as.numeric(pixelCRT$trial$cluster[which(pixel_distances[5,] == min(pixel_distances[5,]))[1]])
level(pixelCRT$trial$cluster[which(pixel_distances[5,] == min(pixel_distances[5,]))[1]])
name(pixelCRT$trial$cluster[which(pixel_distances[5,] == min(pixel_distances[5,]))[1]])
Level(pixelCRT$trial$cluster[which(pixel_distances[5,] == min(pixel_distances[5,]))[1]])
as.character(pixelCRT$trial$cluster[which(pixel_distances[5,] == min(pixel_distances[5,]))[1]])
as.numeric(as.character(pixelCRT$trial$cluster[which(pixel_distances[5,] == min(pixel_distances[5,]))[1]]))
for(i in seq(1:nrow(loc_matched))){
loc_matched$nearest_cluster[i] <- as.numeric(as.character(
pixelCRT$trial$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))[1]]))
}
table(loc_matched$nearest_cluster)
summary(pixelCRT)
pixelCRT$geom_full$centroid
CRT$geom_full$centroid
plotCRT(pixelCRT, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
# recentre the locations in pixelCRT to match the centroid of CRTaggregated
all_latlong <- cbind(c(df$long, pixels$X),c(df$lat, pixels$Y))
# recentre the locations in pixelCRT to match the centroid of CRTaggregated
all_latlong <- data.frame(cbind(x = c(df$long, pixels$X),y = c(df$lat, pixels$Y)))
pixelCRT <- latlong_as_xy(trial = pixels, latvar ='Y', longvar = 'X')
# recentre the locations in pixelCRT to match the centroid of CRTaggregated
all_latlong <- data.frame(cbind(long = c(df$long, pixels$X),lat = c(df$lat, pixels$Y)))
all_locations <- latlong_as_xy(trial = all_latlong, latvar ='lat', longvar = 'long')
all_distances <- as.matrix(dist(all_locations, method = "euclidean"))
all_locations <- latlong_as_xy(trial = all_latlong, latvar ='lat', longvar = 'long')$trial
all_distances <- as.matrix(dist(all_locations, method = "euclidean"))
pixel_distances <- all_distances[seq(1:nrow(loc_matched)), seq(nrow(loc_matched)+1,nrow(all_distances))]
loc_matched$nearest_cluster <- NULL
for(i in seq(1:nrow(loc_matched))){
loc_matched$nearest_cluster[i] <- as.numeric(as.character(
pixelCRT$trial$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))[1]]))
}
table(loc_matched$nearest_cluster)
discrepant <- with(loc_matched,loc_matched[nearest_cluster != cluster0,])
View(discrepant)
View(Gbagba)
table(Gbagba$trial$cluster)
View(gbagba_pixels)
table(loc_matched$nearest_cluster)
table(loc_matched$nearest_cluster, loc_matched$Site_étude.y)
View(pixels)
View(loc_matched)
loc_matched$Row.y
# read in cleaned baseline data
df = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/SNIS_BGS_Pelagie_Aboa.csv')
# remove uninformative records
df <- df[df$lat > 0 & df$Commentaires == 'Fonctionnel', ]
# plot map of assigned clusters
library(CRTspat)
df$cluster <- factor(df$Code)
df <- with(df, df[Espèces %in% c('Aedes aegypti', 'Néant'), c('Row', 'Site_étude', 'cluster', 'lat', 'long', 'Total_femelle')])
Gbagba <- latlong_as_xy(data.frame(df[df$Site_étude == 'Gbagba',]))
plotCRT(Gbagba, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Gbagba)
Anono <- latlong_as_xy(data.frame(df[df$Site_étude == 'Anono',]))
plotCRT(Anono, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Anono)
# aggregate records for repeated samples of the same locations
CRT <- latlong_as_xy(data.frame(df))
CRT$trial$base_denom <- 1
CRTaggregated <- aggregateCRT(CRT, auxiliaries = c('Total_femelle', 'base_denom'))
summary(CRTaggregated)
summary(CRTaggregated$trial$base_denom)
# check for assignment of the same location to multiple clusters
library(dplyr)
CRT$trial$cluster0 <- CRT$trial$cluster
CRT$trial$cluster <- NULL
CRTaggregated$Row <- NULL
loc_matched <- CRTaggregated$trial %>% left_join(CRT$trial, by = join_by(y, x))
outliers <- with(loc_matched, loc_matched[cluster0 != cluster, ])
# check for outlying locations
clusters <- CRT$trial %>%
dplyr::group_by(cluster0) %>%
dplyr::summarize(mlat = mean(y), mlong = mean(x))
loc_matched <- loc_matched %>% left_join(clusters)
loc_matched$distance <- with(loc_matched, sqrt((mlat - y)^2 + (mlong - x)^2))
loc_matched <- loc_matched[order(loc_matched$Row),]
CRT$trial$base_denom <- 1
CRTaggregated <- aggregateCRT(CRT, auxiliaries = c('Total_femelle', 'base_denom'))
summary(CRTaggregated)
summary(CRTaggregated$trial$base_denom)
# check for assignment of the same location to multiple clusters
library(dplyr)
CRT$trial$cluster0 <- CRT$trial$cluster
CRT$trial$cluster <- NULL
CRTaggregated$trial$recd <- CRTaggregated$trial$Row
loc_matched <- CRTaggregated$trial %>% left_join(CRT$trial, by = join_by(y, x))
outliers <- with(loc_matched, loc_matched[cluster0 != cluster, ])
CRT$trial$cluster0 <- CRT$trial$cluster
CRT$trial$cluster <- NULL
CRTaggregated$trial$recd <- CRTaggregated$trial$Row
loc_matched <- CRTaggregated$trial %>% left_join(CRT$trial, by = join_by(y, x))
outliers <- with(loc_matched, loc_matched[cluster0 != cluster, ])
# read in cleaned baseline data
df = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/SNIS_BGS_Pelagie_Aboa.csv')
# remove uninformative records
df <- df[df$lat > 0 & df$Commentaires == 'Fonctionnel', ]
# plot map of assigned clusters
library(CRTspat)
df$cluster <- factor(df$Code)
df <- with(df, df[Espèces %in% c('Aedes aegypti', 'Néant'), c('Row', 'Site_étude', 'cluster', 'lat', 'long', 'Total_femelle')])
Gbagba <- latlong_as_xy(data.frame(df[df$Site_étude == 'Gbagba',]))
plotCRT(Gbagba, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Gbagba)
Anono <- latlong_as_xy(data.frame(df[df$Site_étude == 'Anono',]))
plotCRT(Anono, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Anono)
# aggregate records for repeated samples of the same locations
CRT <- latlong_as_xy(data.frame(df))
CRT$trial$base_denom <- 1
CRTaggregated <- aggregateCRT(CRT, auxiliaries = c('Total_femelle', 'base_denom'))
summary(CRTaggregated)
summary(CRTaggregated$trial$base_denom)
# check for assignment of the same location to multiple clusters
library(dplyr)
CRT$trial$cluster0 <- CRT$trial$cluster
CRT$trial$cluster <- NULL
CRTaggregated$trial$recd <- CRTaggregated$trial$Row
loc_matched <- CRTaggregated$trial %>% left_join(CRT$trial, by = join_by(y, x))
outliers <- with(loc_matched, loc_matched[cluster0 != cluster, ])
# check for outlying locations
clusters <- CRT$trial %>%
dplyr::group_by(cluster0) %>%
dplyr::summarize(mlat = mean(y), mlong = mean(x))
loc_matched <- loc_matched %>% left_join(clusters)
loc_matched$distance <- with(loc_matched, sqrt((mlat - y)^2 + (mlong - x)^2))
loc_matched <- loc_matched[order(loc_matched$recd),]
summary(loc_matched$distance)
outliers <- loc_matched [loc_matched$distance > 0.2,]
# check for nearest pixel in the assigned raster
anono_pixels = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/Anono_BGS_samp_pixels_baseline.csv')
gbagba_pixels = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/Gbagba_BGS_samp_pixels_baseline.csv')
anono_pixels$Site_étude <- 'Anono'
gbagba_pixels$Site_étude <- 'Gbagba'
pixels <- rbind(anono_pixels, gbagba_pixels)
pixels$cluster <- with(pixels, factor(ifelse(Site_étude == 'Anono', Cluster + 100, Cluster + 200)))
pixelCRT <- latlong_as_xy(trial = pixels, latvar ='Y', longvar = 'X')
# recentre the locations in pixelCRT to match the centroid of CRTaggregated
all_latlong <- data.frame(cbind(long = c(df$long, pixels$X),lat = c(df$lat, pixels$Y)))
all_locations <- latlong_as_xy(trial = all_latlong, latvar ='lat', longvar = 'long')$trial
all_distances <- as.matrix(dist(all_locations, method = "euclidean"))
pixel_distances <- all_distances[seq(1:nrow(loc_matched)), seq(nrow(loc_matched)+1,nrow(all_distances))]
loc_matched$nearest_cluster <- NULL
for(i in seq(1:nrow(loc_matched))){
loc_matched$nearest_cluster[i] <- as.numeric(as.character(
pixelCRT$trial$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))[1]]))
}
discrepant <- with(loc_matched,loc_matched[nearest_cluster != cluster0,])
table(discrepant$nearest_cluster)
test_loc <- data.frame(x = seq(1:5), y = c(1,4,2,3,4))
distances <- as.matrix(dist(test_loc, method = "euclidean"))
distances
plot(test_loc$x,test_loc$y)
i = 5
loc_matched$nearest_cluster[i] <- as.numeric(as.character(
pixelCRT$trial$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))[1]]))
as.numeric(as.character(
pixelCRT$trial$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))[1]]))
loc_matched[5,]
i = 345
as.numeric(as.character(
pixelCRT$trial$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))[1]]))
loc_matched[i,]
i = 34
as.numeric(as.character(
pixelCRT$trial$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))[1]]))
loc_matched[i,]
View(loc_matched)
# read in cleaned baseline data
df = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/SNIS_BGS_Pelagie_Aboa.csv')
# remove uninformative records
df <- df[df$lat > 0 & df$long > -8 & df$Commentaires == 'Fonctionnel', ]
# plot map of assigned clusters
library(CRTspat)
library(dplyr)
df$cluster <- factor(df$Code)
df <- with(df, df[Espèces %in% c('Aedes aegypti', 'Néant'), c('Row', 'Site_étude', 'cluster', 'lat', 'long', 'Total_femelle')])
df <- df[order(df$Row),]
Gbagba <- latlong_as_xy(data.frame(df[df$Site_étude == 'Gbagba',]))
plotb <- plotCRT(Gbagba, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Gbagba)
Anono <- latlong_as_xy(data.frame(df[df$Site_étude == 'Anono',]))
plota <- plotCRT(Anono, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Anono)
# construct the list of all pixels and compute xy coordinates
anono_pixels = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/Anono_BGS_samp_pixels_baseline.csv')
gbagba_pixels = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/Gbagba_BGS_samp_pixels_baseline.csv')
anono_pixels$Site_étude <- 'Anono'
gbagba_pixels$Site_étude <- 'Gbagba'
pixels <- rbind(anono_pixels, gbagba_pixels)
pixels$cluster <- with(pixels, factor(ifelse(Site_étude == 'Anono', Cluster + 100, Cluster + 200)))
pixels <- pixels[order(pixels$cluster),]
all_latlong <- data.frame(cbind(long = c(df$long, pixels$X),lat = c(df$lat, pixels$Y)))
all_locations <- latlong_as_xy(trial = all_latlong, latvar ='lat', longvar = 'long')$trial
# assign xy coordinates with the same centroids to both the pixels and the data file
pixels$x <- all_locations$x[nrow(df) + seq(1:nrow(pixels))]
pixels$y <- all_locations$y[nrow(df) + seq(1:nrow(pixels))]
df$x <- all_locations$x[seq(1:nrow(df))]
df$y <- all_locations$y[seq(1:nrow(df))]
# compute the cluster centroids
clusters <- pixels %>%
dplyr::group_by(cluster) %>%
dplyr::summarize(meany = mean(y), meanx = mean(x))
distance_to_centroid <- function(cluster, x, y, clusters = clusters){
meanx <- clusters$meanx[which(clusters$cluster == cluster)]
meany <- clusters$meany[which(clusters$cluster == cluster)]
distance <- sqrt((meany - y)^2 + (meanx - x)^2)
return(distance)}
# aggregate records for repeated samples of the same locations
df$base_denom <- 1
CRT <- CRTsp(df)
CRTaggregated <- aggregateCRT(CRT, auxiliaries = c('Total_femelle', 'base_denom'))
summary(CRTaggregated)
summary(CRTaggregated$trial$base_denom)
CRT$trial$cluster0 <- CRT$trial$cluster
CRT$trial$cluster <- NULL
CRTaggregated$trial$Row <- NULL
loc_matched <- CRTaggregated$trial %>% left_join(CRT$trial, by = join_by(y, x))
loc_matched <- loc_matched[order(loc_matched$Row),]
all_distances <- as.matrix(dist(all_locations, method = "euclidean"))
pixel_distances <- all_distances[seq(1:nrow(loc_matched)), nrow(loc_matched) + seq(1:nrow(pixels))]
# This loop could be vectorised with apply
for(i in seq(1:nrow(loc_matched))){
# assign the pixel-based xy coordinates to all records
x <- loc_matched$x[i]
y <- loc_matched$y[i]
loc_matched$nearest_cluster[i] <- as.numeric(as.character(
pixels$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))[1]]))
loc_matched$shortest_distance[i] <- min(pixel_distances[i,])
loc_matched$distance_assigned_centroid[i] <- distance_to_centroid(cluster = loc_matched$cluster[i], x = x, y =y, clusters = clusters)
loc_matched$distance_discord_centroid[i] <- distance_to_centroid(cluster = loc_matched$cluster0[i], x = x, y =y, clusters = clusters)
loc_matched$distance_pixel_based_centroid[i] <- distance_to_centroid(cluster = loc_matched$nearest_cluster[i], x = x, y =y, clusters = clusters)
}
for(i in seq(1:nrow(pixels))){
pixels$distance_to_centroid[i] <- distance_to_centroid(cluster = pixels$cluster[i], x = pixels$x[i], y =pixels$y[i], clusters = clusters)
}
library(ggplot2)
densitya <- ggplot() + geom_density(data=loc_matched, aes(x = shortest_distance), fill = "orange", alpha = 0.5)
densityb <- ggplot() +
geom_density(data=loc_matched, aes(x = distance_assigned_centroid), fill = "green", alpha = 0.3) +
geom_density(data=pixels, aes(x = distance_to_centroid), fill = "red", alpha = 0.3)
plot_grid(plota, plotb, labels = c('A', 'B'), label_size = 10, ncol = 2)
library(cowplot)
plot_grid(plota, plotb, labels = c('A', 'B'), label_size = 10, ncol = 2)
plot_grid(densitya, densityb, densityc, labels = c('A', 'B', 'C'), label_size = 10, ncol = 1)
densityc <- ggplot() +
geom_density(data=pixels, aes(x = distance_to_centroid), fill = "red", alpha = 0.3) +
geom_density(data=loc_matched, aes(x = distance_pixel_based_centroid), fill = "blue", alpha = 0.3)
plot_grid(densitya, densityb, densityc, labels = c('A', 'B', 'C'), label_size = 10, ncol = 1)
densityb <- ggplot() +
geom_density(data=loc_matched, aes(x = distance_assigned_centroid), fill = "green", alpha = 0.3) +
geom_density(data=loc_matched, aes(x = distance_pixel_based_centroid), fill = "blue", alpha = 0.3)
plot_grid(densitya, densityb, densityc, labels = c('A', 'B', 'C'), label_size = 10, ncol = 1)
densitya <- ggplot() + geom_density(data=loc_matched, aes(x = shortest_distance), fill = "orange", alpha = 0.5) +
xlab('distance (km)')
densitya <- ggplot() + geom_density(data=loc_matched, aes(x = shortest_distance), fill = "orange", alpha = 0.5) +
xlab('distance (km)')
densityb <- ggplot() +
geom_density(data=loc_matched, aes(x = distance_assigned_centroid), fill = "green", alpha = 0.3) +
geom_density(data=loc_matched, aes(x = distance_pixel_based_centroid), fill = "blue", alpha = 0.3)+
xlab('distance (km)')
densityc <- ggplot() +
geom_density(data=pixels, aes(x = distance_to_centroid), fill = "red", alpha = 0.3) +
geom_density(data=loc_matched, aes(x = distance_pixel_based_centroid), fill = "blue", alpha = 0.3)+
xlab('distance (km)')
plot_grid(densitya, densityb, densityc, labels = c('A', 'B', 'C'), label_size = 10, ncol = 1)
# read in cleaned baseline data
df = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/SNIS_BGS_Pelagie_Aboa.csv')
# remove uninformative records
df <- df[df$lat > 0 & df$long > -8 & df$Commentaires == 'Fonctionnel', ]
# plot map of assigned clusters
library(CRTspat)
library(dplyr)
df$cluster <- factor(df$Code)
df <- with(df, df[Espèces %in% c('Aedes aegypti', 'Néant'), c('Row', 'Site_étude', 'cluster', 'lat', 'long', 'Total_femelle')])
df <- df[order(df$Row),]
Gbagba <- latlong_as_xy(data.frame(df[df$Site_étude == 'Gbagba',]))
plotb <- plotCRT(Gbagba, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Gbagba)
Anono <- latlong_as_xy(data.frame(df[df$Site_étude == 'Anono',]))
plota <- plotCRT(Anono, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Anono)
library(cowplot)
plot_grid(plota, plotb, labels = c('A', 'B'), label_size = 10, ncol = 2)
# construct the list of all pixels and compute xy coordinates
anono_pixels = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/Anono_BGS_samp_pixels_baseline.csv')
gbagba_pixels = read.csv(file = 'C:/Users/smith/Documents/documents/Current Projects/Mueller/Gbagba_BGS_samp_pixels_baseline.csv')
anono_pixels$Site_étude <- 'Anono'
gbagba_pixels$Site_étude <- 'Gbagba'
pixels <- rbind(anono_pixels, gbagba_pixels)
pixels$cluster <- with(pixels, factor(ifelse(Site_étude == 'Anono', Cluster + 100, Cluster + 200)))
pixels <- pixels[order(pixels$cluster),]
all_latlong <- data.frame(cbind(long = c(df$long, pixels$X),lat = c(df$lat, pixels$Y)))
all_locations <- latlong_as_xy(trial = all_latlong, latvar ='lat', longvar = 'long')$trial
# assign xy coordinates with the same centroids to both the pixels and the data file
pixels$x <- all_locations$x[nrow(df) + seq(1:nrow(pixels))]
pixels$y <- all_locations$y[nrow(df) + seq(1:nrow(pixels))]
df$x <- all_locations$x[seq(1:nrow(df))]
df$y <- all_locations$y[seq(1:nrow(df))]
# compute the cluster centroids
clusters <- pixels %>%
dplyr::group_by(cluster) %>%
dplyr::summarize(meany = mean(y), meanx = mean(x))
distance_to_centroid <- function(cluster, x, y, clusters = clusters){
meanx <- clusters$meanx[which(clusters$cluster == cluster)]
meany <- clusters$meany[which(clusters$cluster == cluster)]
distance <- sqrt((meany - y)^2 + (meanx - x)^2)
return(distance)}
# aggregate records for repeated samples of the same locations
df$base_denom <- 1
CRT <- CRTsp(df)
CRTaggregated <- aggregateCRT(CRT, auxiliaries = c('Total_femelle', 'base_denom'))
summary(CRTaggregated)
summary(CRTaggregated$trial$base_denom)
# check for assignment of the same location to multiple clusters
CRT$trial$cluster0 <- CRT$trial$cluster
CRT$trial$cluster <- NULL
CRTaggregated$trial$Row <- NULL
loc_matched <- CRTaggregated$trial %>% left_join(CRT$trial, by = join_by(y, x))
loc_matched <- loc_matched[order(loc_matched$Row),]
all_distances <- as.matrix(dist(all_locations, method = "euclidean"))
pixel_distances <- all_distances[seq(1:nrow(loc_matched)), nrow(loc_matched) + seq(1:nrow(pixels))]
# This loop could be vectorised with apply
for(i in seq(1:nrow(loc_matched))){
# assign the pixel-based xy coordinates to all records
x <- loc_matched$x[i]
y <- loc_matched$y[i]
loc_matched$nearest_cluster[i] <- as.numeric(as.character(
pixels$cluster[which(pixel_distances[i,] == min(pixel_distances[i,]))[1]]))
loc_matched$shortest_distance[i] <- min(pixel_distances[i,])
loc_matched$distance_assigned_centroid[i] <- distance_to_centroid(cluster = loc_matched$cluster[i], x = x, y =y, clusters = clusters)
loc_matched$distance_discord_centroid[i] <- distance_to_centroid(cluster = loc_matched$cluster0[i], x = x, y =y, clusters = clusters)
loc_matched$distance_pixel_based_centroid[i] <- distance_to_centroid(cluster = loc_matched$nearest_cluster[i], x = x, y =y, clusters = clusters)
}
for(i in seq(1:nrow(pixels))){
pixels$distance_to_centroid[i] <- distance_to_centroid(cluster = pixels$cluster[i], x = pixels$x[i], y =pixels$y[i], clusters = clusters)
}
library(ggplot2)
densitya <- ggplot() + geom_density(data=loc_matched, aes(x = shortest_distance), fill = "orange", alpha = 0.5) +
xlab('distance (km)')
densityb <- ggplot() +
geom_density(data=loc_matched, aes(x = distance_assigned_centroid), fill = "green", alpha = 0.3) +
geom_density(data=loc_matched, aes(x = distance_pixel_based_centroid), fill = "blue", alpha = 0.3)+
xlab('distance (km)')
densityc <- ggplot() +
geom_density(data=pixels, aes(x = distance_to_centroid), fill = "red", alpha = 0.3) +
geom_density(data=loc_matched, aes(x = distance_pixel_based_centroid), fill = "blue", alpha = 0.3)+
xlab('distance (km)')
plot_grid(densitya, densityb, densityc, labels = c('A', 'B', 'C'), label_size = 10, ncol = 1)
with(loc_matched, table(nearest_cluster != cluster))
max(loc_matched$shortest_distance)
View(densitya)
? 778/963
778/963
required_data <- loc_matched[, c('Row','x','y','Site_étude.x','base_denom.x','Total_femelle.x','nearest_cluster') ]
names(required_data) <- c('Row','x','y','Site','base_denom','base_num','cluster')
plotCRT(required_data[required_data$Site == Anono,], map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
plotCRT(CRTsp(required_data[required_data$Site == Anono,]), map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
plotCRT(required_data[required_data$Site == 'Anono',], map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
mapd = plotCRT(required_data[required_data$Site == 'Gbagba',], map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
plot_grid(mapa, mapb, mapc, mapd, labels = c('A', 'B', 'C', 'D'), label_size = 10, ncol = 2)
mapb <- plotCRT(Gbagba, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
summary(Gbagba)
Anono <- latlong_as_xy(data.frame(df[df$Site_étude == 'Anono',]))
mapa <- plotCRT(Anono, map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
plot_grid(mapa, mapb, mapc, mapd, labels = c('A', 'B', 'C', 'D'), label_size = 10, ncol = 2)
mapc = plotCRT(required_data[required_data$Site == 'Anono',], map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
mapd = plotCRT(required_data[required_data$Site == 'Gbagba',], map = TRUE, fill = "clusters", showLocations = TRUE, maskbuffer = 0.1)
plot_grid(mapa, mapb, mapc, mapd, labels = c('A', 'B', 'C', 'D'), label_size = 10, ncol = 2)
