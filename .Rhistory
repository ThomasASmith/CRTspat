trial$num <- ifelse(runif(nlocations,0,1) < proportion, NA, trial$num)
}
trial <- trial[!is.na(trial$num),]
resX <- CRTanalysis(trial,method = "LME4", cfunc = "X")
resZ <- CRTanalysis(trial,method = "LME4", cfunc = "Z")
LRchisq <- resZ$pt_ests$deviance - resX$pt_ests$deviance
significant <- ifelse(LRchisq > 3.84, 1, 0)
result <- list(radius = radius,
proportion = proportion,
observations = nrow(trial),
significant = significant,
effect_size = resX$pt_ests$effect_size)
return(result)
}
# a user function randomizes and analyses each simulated trial
CRTscenario8 <- function(theta) {
ex <- specify_clusters(CRT, k = k, algo = "kmeans") %>%
randomizeCRT() %>%
simulateCRT(effect = 0.4, generateBaseline = FALSE, outcome0 = outcome0,
ICC_inp = ICC, theta_inp = theta,
matchedPair = FALSE, scale = "proportion", denominator = "denom", tol = 0.01)
# The results are collected in a data frame
sub_results_matrix <- apply(scenarios, MARGIN = 1,  FUN = analyseReducedCRT, CRT = ex)
sub_results <- as.data.frame(do.call(rbind, lapply(sub_results_matrix, as.data.frame)))
sub_results$theta_inp <- theta
return(sub_results)
}
results <- list(simulation = numeric(0),
radius = numeric(0),
proportion = numeric(0),
observations = numeric(0),
significant = numeric(0),
effect_size = numeric(0),
gamma = numeric(0))
simulation <- 0
for(theta in theta_vec){
simulation <- simulation + 1
sub_results <- CRTscenario8(theta)
sub_results$simulation <- simulation
results <- rbind(results,sub_results)
}
results$fried <- ifelse(results$radius > 0, 'fried','scrambled')
results$bias <- results$effect_size - 0.5
library(ggplot2)
theme_set(theme_bw(base_size = 14))
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE)
ggplot(data = results, aes(x = observations, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE)
ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE)
fig8_1d <- ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, span = 0.5)
fig8_1d <- ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, span = 0.5)
ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, span = 0.5)
ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, span = 1)
ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, span = 2)
ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, span = 0.5)
ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, span = 0.1)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, span = 5)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, span = 50)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, span = 1)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, span = 0.01)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 0.3)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 0.5)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = observations, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 0.1)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 0.2)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 0.3)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, method = "loess", span = 0.3)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, method = "loess", span = 0.5)
hist(results$theta_inp[results$fried == 'fried'])
hist(results$theta_inp[results$fried == 'scrambled'])
hist(results$observations[results$fried == 'scrambled'])
hist(results$observations[results$fried == 'fried'])
ggplot(data = results, aes(x = observations, y = 1 - significant, color = factor(fried))) +
geom_smooth(size = 2, method = "loess", span = 1)
max(results$observations)
############################ANALYSIS FOR USE CASE 7
write.csv(results, file='C:/Users/smith/Documents/documents/Current Projects/Multerer/usecase8res1.csv')
results$censored <- 1181 - results$observations
results$censored <- 1182 - results$observations
ggplot(data = results, aes(x = log(censored), y = 1 - significant, color = factor(fried))) +
geom_smooth(size = 2, method = "loess", span = 1)
ggplot(data = results, aes(x = exp(censored/1181), y = 1 - significant, color = factor(fried))) +
geom_smooth(size = 2, method = "loess", span = 1)
ggplot(data = results, aes(x = 1/censored, y = 1 - significant, color = factor(fried))) +
geom_smooth(size = 2, method = "loess", span = 1)
ggplot(data = results, aes(x = log(1/(1 - censored/1181)), y = 1 - significant, color = factor(fried))) +
geom_smooth(size = 2, method = "loess", span = 1)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, method = "lm",
formula = y ~ log(x-min(df$x)-1),
se = FALSE))
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, method = "lm",
formula = y ~ log(x-min(df$x)-1),
se = FALSE)
glm(significant ~ observations,family=binomial(link='logit'), data= results)
model <- glm(significant ~ observations,family=binomial(link='logit'), data= results)
fit(model)
fitted(model)
results$significant_adj <- fitted(model)
ggplot(data = results, aes(x = theta_inp, y = significant_adj, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
results$fried <- ifelse(results$radius > 0, 'fried',
ifelse(results$proportion > 0, 'scrambled', 'neither'))
results$fried <- ifelse(results$radius > 0, 'fried',
ifelse(results$proportion > 0, 'scrambled', 'neither'))
results$bias <- results$effect_size - 0.4
library(ggplot2)
theme_set(theme_bw(base_size = 14))
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
results$fried <- ifelse(results$radius > 0, 'fried',
ifelse(results$proportion > 0, 'scrambled', 'neither'))
results$bias <- results$effect_size - 0.4
library(ggplot2)
theme_set(theme_bw(base_size = 14))
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = observations, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 1)
########################### TESTING CRTanalysis options
example_area = CRTsp(geoscale = 1, locations=200, kappa=3, mu=40)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 0.2)
glm(significant ~ log(observations),family=binomial(link='logit'), data= results)
model <- glm(significant ~ log(observations),family=binomial(link='logit'), data= results)
results$significant_adj <- fitted(model)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 0.2)
ggplot(data = results, aes(x = theta_inp, y = significant_adj, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 0.2)
model <- glm(significant ~ observations,family=binomial(link='logit'), data= results)
model
model <- glm(significant ~ log(observations),family=binomial(link='logit'), data= results)
model
model <- glm(significant ~ sqrt(observations),family=binomial(link='logit'), data= results)
model
model <- glm(significant ~ log(1182-observations),family=binomial(link='logit'), data= results)
model
model <- glm(significant ~ log(observations),family=binomial(link='logit'), data= results)
results$significant_adj <- fitted(model)
ggplot(data = results, aes(x = theta_inp, y = significant_adj, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 0.2)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 0.2)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 0.5)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 0.1)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = significant_adj, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
model <- glm(significant ~ log(observations) + fried,family=binomial(link='logit'), data= results)
results$significant_adj <- fitted(model)
ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = significant_adj, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
results$significant_adj <- fitted(model)
model
model <- glm(significant ~ log(observations) + fried + theta_inp,family=binomial(link='logit'), data= results)
results$significant_adj <- fitted(model)
ggplot(data = results, aes(x = theta_inp, y = significant_adj, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = observations, y = significant_adj, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, method = "loess", span = 1)
ggplot(data = results, aes(x = theta_inp, y = significant_adj, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
ggplot(data = results, aes(x = observations, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, method = "loess", span = 1)
? fitted
df = data.frame(fried = rep(c("fried","scrambled"), each = 64),
theta_inp = ((seq(2:9))/5), each = 8), times= 2),
predict(model,
df = data.frame(fried = rep(c("fried","scrambled"), each = 64),
theta_inp = ((seq(2:9)/5), each = 8), times= 2),
fried = rep(c("fried","scrambled"), each = 64)
theta_inp = ((seq(2:9)/5), each = 8), times= 2)
theta_inp = (rep(rep(seq(2:9)/5), each = 8), times= 2)
rep(seq(2:9)/5), each = 8)
rep(seq(2:9)/5, each = 8)
df = data.frame(fried = rep(c("fried","scrambled"), each = 64),
observations <- rep(seq(5:12), times = 8))
df = data.frame(fried = rep(c("fried","scrambled"), each = 64),
observations <- rep(seq(5:12), times = 8))
ggplot(data = results, aes(x = theta_inp, y = significant_adj, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
df = data.frame(fried = rep(c("fried","scrambled"), each = 64),
theta_inp = rep(rep(seq(2:9)/5, each = 8), times= 2),
observations <- rep(seq(5:12), times = 8))
df
table(df$fried * df$observations)
df = data.frame(fried = rep(c("fried","scrambled"), each = 64),
)
df = data.frame(fried = rep(c("fried","scrambled"), each = 64),
observations = rep(seq(5:12), times = 8))
df = data.frame(fried = rep(c("fried","scrambled"), each = 64),
observations = rep(seq(5:12), times = 8))
ggplot(data = results, aes(x = theta_inp, y = significant_adj, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
fried = rep(c("fried","scrambled"), each = 64)
theta_inp = rep(rep(seq(2:9)/5, each = 8), times= 2)
observations = rep(seq(5:12), times = 8)
df = data.frame(fried = rep(c("fried","scrambled"), each = 64),
observations = rep(seq(5:12), times = 16))
ggplot(data = results, aes(x = theta_inp, y = significant_adj, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
df = data.frame(fried = rep(c("fried","scrambled"), each = 64),
theta_inp = rep(rep(seq(2:9)/5, each = 8), times= 2),
results$significant_adj <- fitted(model)
fried = rep(c("fried","scrambled"), each = 64)
theta_inp = rep(rep(seq(2:9)/5, each = 8), times= 2)
observations = rep(seq(5:12), times = 16)
fried = rep(c("fried","scrambled"), each = 64)
predict(model, df = data.frame(fried=fried, theta_inp = theta_inp, observations = observations)
,
)
predictions <- predict(model, df = data.frame(fried=fried, theta_inp = theta_inp, observations = observations)
,
)
? predict
? predict.glm
predictions <- predict(model, newdata= df, type=”response”)
predictions <- predict(model, newdata = df, type="response")
prediction$significant <- predict(model, newdata = prediction, type="response")
prediction = data.frame(fried=fried, theta_inp = theta_inp, observations = observations)
prediction$significant <- predict(model, newdata = prediction, type="response")
ggplot(data = prediction, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
ggplot(data = significant, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
ggplot(data = prediction, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
fried = rep(c("fried","scrambled"), each = 64)
theta_inp = rep(rep(seq(2:9)/5, each = 8), times= 2)
observations = exp(rep(seq(5:12), times = 16))
prediction = data.frame(fried=fried, theta_inp = theta_inp, observations = observations)
prediction$significant <- predict(model, newdata = prediction, type="response")
ggplot(data = prediction, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
observations = rep(seq(5:12)*100, times = 16))
prediction = data.frame(fried=fried, theta_inp = theta_inp, observations = observations)
prediction$significant <- predict(model, newdata = prediction, type="response")
ggplot(data = prediction, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
predictions
prediction
observations = rep(seq(5:12)*100, times = 16))
observations = rep(seq(5:12)*100, times = 16)
prediction = data.frame(fried=fried, theta_inp = theta_inp, observations = observations)
prediction$significant <- predict(model, newdata = prediction, type="response")
ggplot(data = prediction, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
prediction
observations = rep(400 + seq(1:8)*100, times = 16)
fried = rep(c("fried","scrambled"), each = 64)
theta_inp = rep(rep(seq(1:8)/5, each = 8), times= 2)
observations = rep(400 + seq(1:8)*100, times = 16)
prediction = data.frame(fried=fried, theta_inp = theta_inp, observations = observations)
prediction$significant <- predict(model, newdata = prediction, type="response")
ggplot(data = prediction, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
model <- glm(significant ~ log(observations) * fried + theta_inp, family=binomial(link='logit'), data= results)
fried = rep(c("fried","scrambled"), each = 64)
theta_inp = rep(rep(seq(1:8)/5, each = 8), times= 2)
observations = rep(400 + seq(1:8)*100, times = 16)
prediction = data.frame(fried=fried, theta_inp = theta_inp, observations = observations)
prediction$significant <- predict(model, newdata = prediction, type="response")
ggplot(data = prediction, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE)
fig8_1a <- ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE)
fig8_1b <- ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE)
fig8_1c <- ggplot(data = results, aes(x = observations, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE)
fig8_1d <- ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE)
library(cowplot)
plot_grid(fig8_1a, fig8_1b, fig8_1c, fig8_1d, labels = c('a', 'b', 'c', 'd'), label_size = 12, ncol = 2)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, nolegend)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE)
scale_colour_discrete <- c("#b2df8a","#D55E00","#0072A7")
theme_set(theme_bw(base_size = 14))
fig8_1a <- ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE)
fig8_1b <- ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE))
fig8_1a <- ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE)
fig8_1b <- ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE)
fig8_1c <- ggplot(data = results, aes(x = observations, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE)
fig8_1d <- ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE)
library(cowplot)
plot_grid(fig8_1a, fig8_1b, fig8_1c, fig8_1d, labels = c('a', 'b', 'c', 'd'), label_size = 12, ncol = 2)
scale_colour_discrete <- c("#b2df8a","#D55E00","#0072A7")
fig8_1a <- ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE)
fig8_1b <- ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE)
fig8_1c <- ggplot(data = results, aes(x = observations, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE)
fig8_1d <- ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE)
library(cowplot)
plot_grid(fig8_1a, fig8_1b, fig8_1c, fig8_1d, labels = c('a', 'b', 'c', 'd'), label_size = 12, ncol = 2)
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual =(c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Power')
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual =(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Power')
ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Power')
library(ggplot2)
theme_set(theme_bw(base_size = 14))
fig8_1a <- ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Power')
fig8_1b <- ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Simulated contamination range (km)') +
ylab('Power')
fig8_1c <- ggplot(data = results, aes(x = observations, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Bias')
fig8_1d <- ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Simulated contamination range (km)') +
ylab('Bias')
library(cowplot)
plot_grid(fig8_1a, fig8_1b, fig8_1c, fig8_1d, labels = c('a', 'b', 'c', 'd'), label_size = 12, ncol = 2)
library(ggplot2)
theme_set(theme_bw(base_size = 14))
fig8_1a <- ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Power')
fig8_1b <- ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Simulated contamination range (km)') +
ylab('Power')
fig8_1c <- ggplot(data = results, aes(x = observations, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Bias')
fig8_1d <- ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Simulated contamination range (km)') +
ylab('Bias')
library(cowplot)
plot_grid(fig8_1a, fig8_1b, fig8_1c, fig8_1d, labels = c('a', 'b', 'c', 'd'), label_size = 10, ncol = 2)
theme_set(theme_bw(base_size = 12))
fig8_1a <- ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Power')
fig8_1b <- ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Simulated contamination range (km)') +
ylab('Power')
fig8_1c <- ggplot(data = results, aes(x = observations, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Bias')
fig8_1d <- ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2,se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Simulated contamination range (km)') +
ylab('Bias')
library(cowplot)
plot_grid(fig8_1a, fig8_1b, fig8_1c, fig8_1d, labels = c('a', 'b', 'c', 'd'), label_size = 14, ncol = 2)
source("C:/git_repos/CRTspat/vignettes/runVignette.R")
knitr::knit("vignettes/Usecase7.Rmd.orig", output = "vignettes/Usecase7.Rmd")
knitr::knit("vignettes/Usecase8.Rmd.orig", output = "vignettes/Usecase8.Rmd")
knitr::knit("vignettes/Usecase9.Rmd.orig", output = "vignettes/Usecase9.Rmd")
rmarkdown.html_vignette.check_title = FALSE
devtools::install(build_vignettes = TRUE)
library(ggplot2)
theme_set(theme_bw(base_size = 12))
fig8_1a <- ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Power')
fig8_1b <- ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Simulated contamination range (km)') +
ylab('Power')
fig8_1c <- ggplot(data = results, aes(x = observations, y = bias, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Bias')
fig8_1d <- ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Simulated contamination range (km)') +
ylab('Bias')
library(cowplot)
plot_grid(fig8_1a, fig8_1b, fig8_1c, fig8_1d, labels = c('a', 'b', 'c', 'd'), label_size = 14, ncol = 2)
library(ggplot2)
theme_set(theme_bw(base_size = 12))
fig8_1a <- ggplot(data = results, aes(x = observations, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Power')
fig8_1b <- ggplot(data = results, aes(x = theta_inp, y = significant, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Simulated contamination range (km)') +
ylab('Power')
fig8_1c <- ggplot(data = results, aes(x = observations, y = bias, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Number of locations in analysis') +
ylab('Bias')
fig8_1d <- ggplot(data = results, aes(x = theta_inp, y = bias, color = factor(fried))) +
geom_smooth(size = 2, se = FALSE, show.legend = FALSE) +
scale_colour_manual(values = c("#b2df8a","#D55E00","#0072A7")) +
xlab('Simulated contamination range (km)') +
ylab('Bias')
library(cowplot)
plot_grid(fig8_1a, fig8_1b, fig8_1c, fig8_1d, labels = c('a', 'b', 'c', 'd'), label_size = 14, ncol = 2)
devtools::install(build_vignettes = TRUE)
# to build package website
usethis::use_pkgdown()
pkgdown::build_site()
knitr::knit("vignettes/Usecase8.Rmd.orig", output = "vignettes/Usecase8.Rmd")
rmarkdown.html_vignette.check_title = FALSE
devtools::install(build_vignettes = TRUE)
pkgdown::build_site()
knitr::knit("vignettes/CRTspat.Rmd.orig", output = "vignettes/CRTspat.Rmd")
devtools::install(build_vignettes = TRUE)
pkgdown::build_site()
