---
title: "CRTspat package"
author: "Tom Smith, Lea Multerer"
date: "`r Sys.Date()`"
output:
  rmarkdown::html_vignette:
  toc: true
vignette: >
  %\VignetteIndexEntry{CRTspat package}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

<!--To build the vignette
# since the vignette takes a long time to run, it is not run with every build
# as suggested here https://ropensci.org/blog/2019/12/08/precompute-vignettes/
# to Knit this vignette without this time consuming step being part of the default build
knitr::knit("vignettes/CRTspat.Rmd.orig", output = "vignettes/CRTspat.Rmd")
rmarkdown.html_vignette.check_title = FALSE
devtools::install(build_vignettes = TRUE)
-->
## Summary

The `CRTspat` package is intended to support the design and analysis of cluster-randomized trials (CRTs) where there is geographical contamination between the arms. It can also be used in simulation of such CRTs to support development of improved methodology. An important set of applications is in field trials of vector-control interventions against malaria.

The package can facilitate design of efficient trials by providing algorithms for:
+ algorithmic assignment of clusters (and buffer zones)
+ analysis of the effects of spill-over
+ simulation of trials based on the geography of previously studied field sites and trials, and observed spatial patterns of outcomes, or on geographical information from novel sites.

The function `analyseCRT` is a wrapper for the statistical analysis packages:

+ [geepack](https://www.jstatsoft.org/article/view/v015i02)
+ [INLA](https://www.r-inla.org/)
+ [jagsUI](https://cran.r-project.org/web/packages/jagsUI/index.html)
+ and the [t.test](https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/t.test)

The methods are described in the papers [Multerer *et al.* (2021a)](https://trialsjournal.biomedcentral.com/articles/10.1186/s13063-021-05543-8) and [Multerer *et al.* (2021b)](https://malariajournal.biomedcentral.com/articles/10.1186/s12936-021-03924-7).

##  Anticipated use cases

+ Algorithmic definition of clusters and of buffer zones (if required)
+ Simulation of trials (for evaluating power and testing methods)
+ Analysis of trials allowing for spillover effects
+ Determination of optimal cluster size
+ Determining the effects of different sizes of buffer zones
+ Estimation of intracluster correlations (ICC), contamination ranges and efficacy
+ Power and sample size calculations allowing for contamination
+ Anonymising input locations (if required for sharing reference datasets).

##  Package functions

The package functions are as follows:

| Function name | Purpose | Pre-requirements | Outputs |
|-------------------:|:---------------|---------------|:--------------------:|
|_Simulate_TrialSite()_|creation of simulated locations|no pre-existing trial|locations in x,y format (columns 'x','y')|
|_Convert_LatLong_|conversion of latlong geolocations to cartesian coordinates|geolocations in lat-long |locations in x,y format (columns 'x','y')|
|_Anonymise_TrialSite()_|anonymisation of locations (while preserving distances)|locations in x,y format (columns 'x','y') |locations in x,y format (columns 'x','y')|
|_Design_CRT()_|determination of required number of clusters|locations in x,y format (columns 'x','y') | Estimated minimum number of clusters; Cluster assignments|
|_specify.clusters()_|algorithmic assignment of clusters|locations in x,y format (columns 'x','y') |assignment of clusters (column 'cluster')|
|_Randomize_CRT()_|randomization|assignment of clusters (column 'cluster')|assignment of arms (column 'arm')|
|_Simulate_CRT()_|simulation of outcomes|cluster and arm assignments|simulated proportions by record|
|_Specify_CRTbuffer_|specification of buffer zones |assignment of arms (column 'arm')|assignment of buffer (column 'buffer')|
|_Aggregate_CRT()_|aggregation of records by location |outcome (proportion) by record|proportions by unique location|
|_Plot_CRTmap()_|mapping of locations, clusters, arms, outcomes|unique locations|maps of locations and assignments|
|_Analyse_CRT()_|standard analyses of efficacy (or baseline data) of ICC, or of contamination range|outcome (proportion) by record; cluster and arm assignments|statistical analysis, outputs depend on choice of method|

For details of the additional parameters required on input and of the outputs, see the documentation under each function. The term 'record' refers to the rows in the dataframe, which often, but not always, correspond to unique locations.

## General Workflow

The use of the package starts with selection of a set of locations.  These may be derived from a field site, or if the objective is a generic evaluation of methods, simulated locations can be used, most straightforwardly by generating them using `Simulate_TrialSite()`. The dataframe containing the locations is then incrementally augmented with clusters, arms, and trial outcomes (working through Figure 1 from top to bottom, see below). At each stage the augmentation can use either existing data from field trials or pre-determined values (blue boxes in Figure 1), or can be automated using the package functions (green boxes in Figure 1). The analysis routines in the package can be used to inform the choice of parameters, by quantifying degree of contamination between arms, required numbers of clusters, statistical power etc..

_Figure 1. Workflow_

![image info](./workflow.svg){ width=100% }
(functions in brackets represent optional steps)

<!--Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot-->

Examples of the workflow for each use case are as follows:

[### Use Case 1: Algorithmic definition of clusters and of buffer zones](Usecase1.html)

[### Use Case 2: Simulation of trials with spillover effects](Usecase2.html)

[### Use Case 3: Analysis of trials allowing for spillover effects](Usecase3.html)

+ Determining the effects of different sizes of buffer zones

+ Estimation of intracluster correlations (ICC), contamination ranges and efficacy

+ Power and sample size calculations allowing for contamination

+ Anonymising input locations (if required for sharing reference datasets)
