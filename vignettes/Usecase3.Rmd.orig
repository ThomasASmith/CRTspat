---
title: "Use Case 3: Estimation of intracluster correlations (ICC) by cluster size"
output:
  rmarkdown::html_vignette:
  toc: true
vignette: >
  %\VignetteIndexEntry{Use Case 3: Estimation of intracluster correlations (ICC) by cluster size}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---
<!--To build the vignette
# since the vignette takes a long time to run, it is not run with every build
# as suggested here https://ropensci.org/blog/2019/12/08/precompute-vignettes/
# to Knit this vignette without this time consuming step being part of the default build
knitr::knit("vignettes/Usecase3.Rmd.orig", output = "vignettes/Usecase3.Rmd")
rmarkdown.html_vignette.check_title = FALSE
devtools::install(build_vignettes = TRUE)
-->

The `CRTanalysis` function offers several different analyses of either simulated or real trial datasets. The different options are specified using the `method` argument of the function.

```{r example4a.r, fig.keep = 'none', echo = TRUE}
# use the same dataset as for Use Case 1.
library(CRTspat)
example_locations <- readdata("example_baseline.csv")
example_locations$base_denom <- 1
library(dplyr)
example <- latlong_as_xy(example_locations) %>%
    aggregate(auxiliaries = c("RDT_test_result", "base_denom"))
summary(example)

# randomly sample an array of numbers of clusters
set.seed(5)
k_vec <- round(runif(20, min = 6, max = 150))

CRTscenario3 <- function(k, CRT) {
    ex <- specify.clusters(CRT, k = k, algo = "kmeans") %>%
        randomizeCRT()
    sink(file = "output.log", type = "output")
    GEEanalysis <- CRTanalysis(ex, method = "GEE", baselineOnly = TRUE, excludeBuffer = FALSE,
        baselineNumerator = "RDT_test_result", baselineDenominator = "base_denom")
    sink()
    locations <- GEEanalysis$description$locations
    ICC <- GEEanalysis$pt.ests$ICC
    value <- c(k = k, ICC = ICC, mean_h = locations/k)
    return(value)
}

results <- t(sapply(k_vec, FUN = CRTscenario3, simplify = "array", CRT = example)) %>%
    data.frame()
```

Beyond this point, increasing the number of clusters allocated in the fixed area (by
making them smaller) does not add to the total number of clusters. In this example the maximum is achieved when the
input k is about 35 and the output k is 18.5.

```{r example3b.r, fig.keep = 'none', echo = TRUE}
library(ggplot2)
theme_set(theme_bw(base_size = 14))
ggplot(data = results, aes(x = mean_h, y = ICC)) + geom_smooth() + xlab("Mean locations per cluster") +
    ylab("Intracluster correlation")
```
<p>
    <img src="example3b.r-1.png" > <br>
    <em>Fig 3.1 Intracluster correlation by size of cluster</em>
</p>


