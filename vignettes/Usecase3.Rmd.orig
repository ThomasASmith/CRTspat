---
title: "Use Case 3"
output:
  rmarkdown::html_vignette:
  toc: true
vignette: >
  %\VignetteIndexEntry{Use Case 3: Analysis of trials allowing for spillover effects}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---
<!--To build the vignette
# since the vignette takes a long time to run, it is not run with every build
# as suggested here https://ropensci.org/blog/2019/12/08/precompute-vignettes/
# to Knit this vignette without this time consuming step being part of the default build
knitr::knit("vignettes/Usecase3.Rmd.orig", output = "vignettes/Usecase3.Rmd")
rmarkdown.html_vignette.check_title = FALSE
devtools::install(build_vignettes = TRUE)
-->

### Use Case 3: Analysis of trials allowing for spillover effects

The `Analyse_CRT` function offers several different analyses of either simulated or real trial datasets. The different options are specified using the `method` argument of the function.

+ `method = "T" summarises the outcome at the level of the cluster and uses t-tests to carry out statistical significance tests of the effect, and to compute confidence intervals for the effect size.
+	`method = "GEE"` uses Generalised Estimating Equations to estimate the efficacy in a model with iid random effects for the clusters.An estimate of the intracluster correlation (ICC) is also provided.
+ `method = "INLA"`uses approximate Bayesian inference via the [R-INLA package](https://www.r-inla.org/). This
INLA spatial analysis requires a prediction mesh. Generation of this mesh using `createMesh()`
`inlaMeshTest <- createMesh(example5a, ncells=100)` is computationally expensive, so it is recommended to compute the mesh just once for each dataset.


| Option | Algorithm | Linear predictor| Allowance for Clustering | Reference |
|----------:|:---------------|---------------|:--------------------:|
|'L0' | S ||NO | NO |[Multerer *et al.* (2021a)](https://trialsjournal.biomedcentral.com/articles/10.1186/s13063-021-05543-8) |
|'L1' | ML |
|'L2' | ML |
|'L3' | ML |
|'GEE' | GEE |
|'M1' | MCMC |
|'M2' | MCMC |
|'M3' | MCMC |

S: Sample proportions; ML: Maximum likelihood; GEE: Generalised estimating equations; MCMC: Bayesian Markov chain Monte Carlo.

In each case the efficacy is estimated as $\tilde{E}_{s} = 1- \frac{\tilde{p}_{I}}{\tilde{p}_{C}}$.

$\hat{E}_{s} = 1- \frac{\hat{p}_{I}}{\hat{p}_{C}}$.
$\hat{p}_{C} = \frac{1}{1 + exp(-\beta_1)}$.
$\hat{p}_{I} = \frac{1}{1 + exp(-\beta_1-\beta_2)}$.

Real field trials are likely to
Data analysts are invited to use the JAGS code provided for the



```{r example3.r, fig.path=('vignettes/'),echo=TRUE}
results6a <- Analyse_CRT(trial = example5a, method = 'INLA', inla.mesh = inlaMeshTest)
Plot_CRTmap(trial = example5a, analysis = results6a, showPrediction = TRUE)
Plot_Contamination(results6a)
results5a <- Analyse_CRT(trial = example5a, method = "INLA", inla.mesh = inlaMeshTest)
Plot_Contamination(analysis = results5a)
Plot_CRTmap(analysis = results5a, trial = example5a, showPrediction = TRUE)
```


### Use Case 4: Estimation of optimal cluster size

Using a fixed set of locations, a set of trials is simulated (using the `Simulate_CRT` function, see Use Case 2), with different candidate values used for the cluster size, and hence the number of clusters. Where input values are uncertain (in particular values of the ICC or the contamination range) these are generated by sampling from prior distributions.

```{r example5.r, fig.path=('/vignettes/'),echo=TRUE}
set.seed(1234)
#   use co-ordinates, and baseline data from `test5`
nclusters = 20
ICC = 0.08
theta = 0.2
test7a = specify.clusters(trial=test3, nclusters=nclusters, algo='kmeans')
test7b = Randomize_CRT(test7a)
test7c = Simulate_CRT(trial= test7b,
                    efficacy=0.4,
                    initialPrevalence = 0.4,
                    generateBaseline=TRUE,
                    baselineNumerator='base_num',
                    baselineDenominator='base_denom',
                    ICC_inp=ICC,
                    theta_inp=theta)

results7=Analyse_CRT(trial=test7c,method='ML',cont='L')
```





