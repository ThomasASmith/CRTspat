---
title: "Use Case 2: Simulation of trials with spillover effects"
output:
  rmarkdown::html_vignette:
  toc: true
vignette: >
  %\VignetteIndexEntry{Use Case 2: Simulation of trials with spillover effects}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---
<!--To build the vignette
# since the vignette takes a long time to run, it is not run with every build
# as suggested here https://ropensci.org/blog/2019/12/08/precompute-vignettes/
# to Knit this vignette without this time consuming step being part of the default build
knitr::knit("vignettes/Usecase2.Rmd.orig", output = "vignettes/Usecase2.Rmd")
rmarkdown.html_vignette.check_title = FALSE
devtools::install(build_vignettes = TRUE)
-->
### Use Case 2: Simulation of trials with spillover effects

Effects of settlement patterns, choices of cluster size and buffer widths, and the extent of contamination between arms on the outcomes of CRTs do not lend themselves to mathematical analysis. Simulation of trials provide a means of exploring their effects on trial power and the robustness of statistical methodologies.

Trials can be simulated using the `simulateCRT` function, which augments a `trial` data frame (created externally) or object of class `CRT` (created by package functions) with simulated outcome data.  The input object must contain location information and both cluster and arm assignments (see Use Case 1).

Information about the underlying spatial pattern of disease is used in the form of the intra-cluster correlation `ICC_inp` of the outcome, and of the `propensity`. The former takes a single value for the chosen design. The latter takes a positive real value for each location. In the case of malaria, `propensity` can be thought of as measuring exposure.

`ICC_inp` and `propensity` may either be estimated from baseline data or supplied by the user. The behaviour of the
function depends on which variable is supplied, and the value of `generateBaseline` as follows

If `propensity` is not supplied,

| Data supplied by the user | Function behaviour |
|-------------------:|:--------------------------:|
|`propensity` supplied by user|Baseline data are created by sampling around `propensity`|
|Baseline data are supplied by user and `propensity` is not supplied |`propensity` is created from the baseline data|
|Neither baseline data nor `propensity` are supplied |`propensity` is generated by ... |


Contamination or spillover between trial arms is modelled as a additional smoothing process applied to the `propensity` via a normal kernel. In the case of malaria this is proposed as an approximation to the effect of mosquito movement. The degree of spillover is specified either as a contamination range with the `theta_inp` parameter, or as `sd`, the bandwidth of the normal kernel.

When `ICC_inp` is supplied




#### Example with baseline data provided as proportions
```{r example2.r, fig.path=('vignettes/'),echo=TRUE}
set.seed(1234)
# use co-ordinates, cluster and arm assignments, and pre-calculated transmission surface from Use Case 1.
example_locations <- readdata('example_baseline.csv')
example_locations$base_denom <- 1
example_xy <- convert.latlong.xy(df = example_locations)
example_aggregated <- aggregateCRT(trial = example_xy, auxiliaries = c("RDT_test_result", "base_denom"))
example_clustered <- specify.clusters(trial = example_aggregated, h = 50, algorithm = 'NN')
example_randomized <- randomizeCRT(trial = example_clustered, matchedPair = TRUE)

example5b <- simulateCRT(trial = example_randomized,
       efficacy = 0.4,
       outcome0 = 0.5,
       generateBaseline = FALSE,
       baselineNumerator = "RDT_test_result",
       baselineDenominator = "base_denom",
       ICC_inp = NULL, theta_inp = 0.8)
summary(example5b)
```

#### Example with infectiousness proxy surface generated externally
```{r example4.r, fig.path = ('vignettes/'), echo = TRUE}
set.seed(1234)
# Simulate a site with 2000 locations
example6 <- simulateSite(geoscale = 2, locations=2000, kappa=3, mu=40)
# propensity surface generated as an arbitrary linear function of x co-ordinate
example6$propensity <- 0.5*example5b$x - min(example5b$x)+1
example6a <- simulateCRT(trial = example5b,
       efficacy = 0.4,
       outcome0 = 0.5,
       generateBaseline = TRUE,
       ICC_inp = NULL,
       theta_inp = 0.5)

results6a <- analyseCRT(trial = example6a, method = 'GEE')
summary(results6a)
#results6a <- analyseCRT(trial = example6a, method = 'INLA', inla.mesh = inlaMeshTest)
#plotCRTmap(trial = example6a, analysis = results6a, showPrediction = TRUE)
```

#### Example with baseline generated from user-provided values of the overall initial prevalence and ICC
```{r example5.r, fig.path = ('vignettes/'), echo = TRUE}
set.seed(1234)
# use co-ordinates, cluster and arm assignments, and baseline data from `example5`
example5c <- simulateCRT(trial = example5b,
       efficacy = 0.4,
       outcome0 = 0.6,
       generateBaseline = TRUE,
       baselineNumerator = 'base_num',
       baselineDenominator = 'base_denom',
       ICC_inp = 0.08,
       theta_inp = 0.2)

results6c <- analyseCRT(trial = example5c, method = 'GEE')
summary(results6c)
```
